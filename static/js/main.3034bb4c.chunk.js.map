{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","clockName","useState","Date","today","setToday","useEffect","intervalId","window","setInterval","console","info","toUTCString","slice","clearInterval","className","App","setClockName","hasClock","setHasClock","document","addEventListener","event","preventDefault","timerId","value","now","toString","getRandomName","ReactDOM","render","getElementById"],"mappings":"oLAOaA,EAAyB,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACvC,EAA0BC,mBAAS,IAAIC,MAAvC,mBAAOC,EAAP,KAAcC,EAAd,KAWA,OATAC,qBAAU,WACR,IAAMC,EAAaC,OAAOC,aAAY,WACpCJ,EAAS,IAAIF,MACbO,QAAQC,KAAKP,EAAMQ,cAAcC,OAAO,IAAK,MAC5C,KAEH,OAAO,kBAAMC,cAAcP,MAC1B,CAACH,IAGF,sBAAKW,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGd,IAGF,YAED,sBAAMc,UAAU,cAAhB,SACGX,EAAMQ,cAAcC,OAAO,IAAK,SClBlC,IAAMG,EAAgB,WAC3B,MAAkCd,mBAAS,WAA3C,mBAAOD,EAAP,KAAkBgB,EAAlB,KACA,EAAgCf,oBAAS,GAAzC,mBAAOgB,EAAP,KAAiBC,EAAjB,KAoBA,OAlBAC,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACNJ,GAAY,MAGdC,SAASC,iBAAiB,SAAS,SAACC,GAClCA,EAAMC,iBACNJ,GAAY,MAGdb,qBAAU,WACR,IAAMkB,EAAUhB,OAAOC,aAAY,WACjCQ,EAtBN,WACE,IAAMQ,EAAQtB,KAAKuB,MAAMC,WAAWd,OAAO,GAE3C,MAAM,SAAN,OAAgBY,GAmBCG,MACZ,MAEH,OAAO,kBAAMpB,OAAOM,cAAcU,OAIlC,sBAAKT,UAAU,MAAf,UACE,6CACCG,GACC,cAAC,EAAD,CACEjB,UAAWA,QClCrB4B,IAASC,OACP,cAAC,EAAD,IACAV,SAASW,eAAe,U","file":"static/js/main.3034bb4c.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\n\ntype Props = {\n  clockName: string,\n};\n\nexport const Clock: React.FC<Props> = ({ clockName }) => {\n  const [today, setToday] = useState(new Date());\n\n  useEffect(() => {\n    const intervalId = window.setInterval(() => {\n      setToday(new Date());\n      console.info(today.toUTCString().slice(-12, -4));\n    }, 1000);\n\n    return () => clearInterval(intervalId);\n  }, [today]);\n\n  return (\n    <div className=\"Clock\">\n      <strong className=\"Clock__name\">\n        {clockName}\n      </strong>\n\n      {' time is '}\n\n      <span className=\"Clock__time\">\n        {today.toUTCString().slice(-12, -4)}\n      </span>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport const App: React.FC = () => {\n  const [clockName, setClockName] = useState('Clock-0');\n  const [hasClock, setHasClock] = useState(true);\n\n  document.addEventListener('contextmenu', (event) => {\n    event.preventDefault(); // not to show the context menu\n    setHasClock(false);\n  });\n\n  document.addEventListener('click', (event) => {\n    event.preventDefault();\n    setHasClock(true);\n  });\n\n  useEffect(() => {\n    const timerId = window.setInterval(() => {\n      setClockName(getRandomName());\n    }, 3300);\n\n    return () => window.clearInterval(timerId);\n  });\n\n  return (\n    <div className=\"App\">\n      <h1>React clock</h1>\n      {hasClock && (\n        <Clock\n          clockName={clockName}\n        />\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}